{"version":3,"sources":["utils/sortSpeakers.js","utils/sortFeatured.js","context/AppContext.js","components/Sidebar.js","components/MobileMenu.js","components/Banner.js","components/Featured.js","components/Browse.js","components/Player.js","components/Songs.js","App.js","serviceWorker.js","prismic.js","index.js"],"names":["sortSpeakers","speakers","sort","a","b","data","name","text","reduce","acc","val","Object","objectSpread","defineProperty","id","undefined","sortFeatured","featured","featured_group","concat","toConsumableArray","group_label","speaker_1","speaker_2","speaker_3","speaker_4","AppContext","createContext","Sidebar","useContext","react_default","createElement","className","onClick","react_router_dom","to","action","method","target","type","value","border","keys","map","index","key","href","rel","MobileMenu","setIsMobilePlayerOpen","Banner","_useContext","speaker","style","animationDelay","quotes","quote","Section","_ref","group","backgroundImage","avatar","url","Date","dob","getFullYear","dod","Featured","Featured_Section","Browse","src_components_Banner","src_components_Featured","Player","lecture","isMobilePlayerOpen","lectureId","link","embed_url","split","src","title","frameBorder","allowFullScreen","biography","Songs","setLecture","setSpeaker","useParams","videos","video","App","_useAllPrismicDocumen","useAllPrismicDocumentsByType","slicedToArray","_useAllPrismicDocumen3","_useState","useState","_useState2","_useState3","_useState4","_useState5","_useState6","context","useEffect","context_AppContext","Provider","src_components_MobileMenu","src_components_Sidebar","react_router","path","element","src_components_Browse","src_components_Songs","src_components_Player","Boolean","window","location","hostname","match","endpoint","prismic","client","ReactDOM","render","StrictMode","dist","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.7222139b.chunk.js","sourcesContent":["const sortSpeakers = (speakers) =>\n  !speakers\n    ? undefined\n    : speakers\n        .sort((a, b) => {\n          a = a.data;\n          b = b.data;\n          if (a.name[0].text < b.name[0].text) {\n            return -1;\n          }\n          if (a.name[0].text > b.name[0].text) {\n            return 1;\n          }\n          return 0;\n        })\n        .reduce((acc, val) => {\n          return {\n            ...acc,\n            [val.id]: val.data,\n          };\n        }, {});\n\nexport default sortSpeakers;\n","const sortFeatured = (featured) => {\n  if (!featured) {\n    return undefined;\n  }\n  featured = featured[0].data.featured_group.reduce((acc, val) => {\n    return [\n      ...acc,\n      {\n        text: val.group_label[0].text,\n        speakers: [\n          val.speaker_1.id,\n          val.speaker_2.id,\n          val.speaker_3.id,\n          val.speaker_4.id,\n        ],\n      },\n    ];\n  }, []);\n  return featured;\n};\n\nexport default sortFeatured;\n","import { createContext } from 'react';\n\nconst AppContext = createContext(null);\n\nexport default AppContext;\n","import React, { useContext } from 'react';\nimport './Sidebar.scss';\nimport AppContext from '../context/AppContext';\nimport { Link } from 'react-router-dom';\n\nconst Sidebar = () => {\n  const { speakers } = useContext(AppContext);\n  return (\n    <div className='Sidebar animated slideInLeft'>\n      <h2>Yogi FM</h2>\n      <span className='link' onClick={null}>\n        <Link to='/'>Home</Link>\n      </span>\n      <form\n        action='https://www.paypal.com/cgi-bin/webscr'\n        method='post'\n        target='_blank'\n      >\n        <input type='hidden' name='cmd' value='_s-xclick' />\n        <input type='hidden' name='hosted_button_id' value='RKQ42R5GQ42RA' />\n        <input type='submit' border='0' name='submit' value='Donate' />\n      </form>\n      <br />\n      <span className='title'>SPEAKERS</span>\n      {Object.keys(speakers).map((id, index) => {\n        const { name } = speakers[id];\n        return (\n          <span className='link' key={id}>\n            <Link key={id} to={`/speaker/${id}`}>\n              {name[0].text}\n            </Link>\n          </span>\n        );\n      })}\n      <br />\n      <span className='footer'>\n        <b>Yogi FM</b> | Copyright 2019\n      </span>\n      <span className='footer'>\n        Developed By{' '}\n        <b>\n          <a\n            href='https://github.com/jadeallencook'\n            rel='noopener noreferrer'\n            target='_blank'\n          >\n            @jadeallencook\n          </a>\n        </b>\n      </span>\n    </div>\n  );\n};\n\nexport default Sidebar;\n","import React, { useContext } from 'react';\nimport './MobileMenu.scss';\nimport { Link } from 'react-router-dom';\nimport AppContext from '../context/AppContext';\n\nconst MobileMenu = () => {\n  const { setIsMobilePlayerOpen } = useContext(AppContext);\n  return (\n    <div className='MobileMenu'>\n      <Link to='/' onClick={() => setIsMobilePlayerOpen(false)}>\n        &#8962;\n      </Link>\n    </div>\n  );\n};\n\nexport default MobileMenu;\n","import React, { useContext } from 'react';\nimport './Banner.scss';\nimport AppContext from '../context/AppContext';\n\nconst Banner = () => {\n  const { speaker, speakers } = useContext(AppContext);\n  return (\n    <div className='Banner'>\n      You're listening to\n      <h2 className='animated flipInX' style={{ animationDelay: '100ms' }}>\n        {speakers[speaker].name[0].text}\n      </h2>\n      <p className='animated fadeIn'>\n        {speakers[speaker].quotes[0].quote[0]\n          ? `\"${speakers[speaker].quotes[0].quote[0].text}\"`\n          : 'Enjoy your lecture!'}\n      </p>\n    </div>\n  );\n};\n\nexport default Banner;\n","import React, { useContext } from 'react';\nimport './Featured.scss';\nimport AppContext from '../context/AppContext';\nimport { Link } from 'react-router-dom';\n\nconst Section = ({ group }) => {\n  const { speakers } = useContext(AppContext);\n  return (\n    <div>\n      <span className='title'>{group.text}</span>\n      <div className='collection'>\n        {group.speakers.map((key) => {\n          const speaker = speakers[key];\n          return !speaker ? null : (\n            <Link to={`/speaker/${key}`} key={key}>\n              <div\n                style={{\n                  backgroundImage: `url(${speaker.avatar.url})`,\n                }}\n              />\n              <span className='name'>{speaker.name[0].text}</span>\n              <span className='years'>\n                {new Date(speaker.dob).getFullYear()}-\n                {!speaker.dod ? 'Now' : new Date(speaker.dod).getFullYear()}\n              </span>\n            </Link>\n          );\n        })}\n      </div>\n    </div>\n  );\n};\n\nconst Featured = () => {\n  const { featured } = useContext(AppContext);\n\n  return (\n    <div className='Featured'>\n      {featured.map((group, index) => {\n        return <Section group={group} key={`featured-${index}`} />;\n      })}\n    </div>\n  );\n};\n\nexport default Featured;\n","import React from 'react';\nimport Banner from './Banner';\nimport Featured from './Featured';\nimport './Browse.scss';\n\nconst Browse = () => {\n  return (\n    <div className='Browse animated fadeIn'>\n      <Banner />\n      <Featured />\n    </div>\n  );\n};\n\nexport default Browse;\n","import React, { useContext } from 'react';\nimport './Player.scss';\nimport AppContext from '../context/AppContext';\n\nconst Player = () => {\n  const { lecture, speaker: id, speakers, isMobilePlayerOpen } = useContext(\n    AppContext\n  );\n  const lectureId = lecture.link.embed_url.split('=')[1];\n  const speaker = speakers[id];\n\n  return (\n    <div\n      className={`Player animated slideInRight ${\n        isMobilePlayerOpen ? 'mobile-player-open' : 'mobile-player-closed'\n      }`}\n    >\n      <div>\n        <iframe\n          id='speaker-video'\n          className='speaker-video'\n          src={`https://www.youtube.com/embed/${lectureId}`}\n          title='Speaker Video'\n          frameBorder='0'\n          allowFullScreen={false}\n        />\n      </div>\n      <div className='about'>\n        <h3>{speaker.name[0].text}</h3>\n        <p>\n          {speaker.biography[0]\n            ? speaker.biography[0].text\n            : 'There is not yet a biography for this speaker.'}\n        </p>\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n","import React, { useContext } from 'react';\nimport './Songs.scss';\nimport AppContext from '../context/AppContext';\nimport { useParams } from 'react-router-dom';\n\nconst Songs = () => {\n  const {\n    speakers,\n    setLecture,\n    setSpeaker,\n    isMobilePlayerOpen,\n    setIsMobilePlayerOpen,\n  } = useContext(AppContext);\n  const { id } = useParams();\n  const speaker = speakers[id];\n\n  return (\n    <div\n      className={`Songs ${\n        isMobilePlayerOpen ? 'mobile-player-open' : 'mobile-player-closed'\n      }`}\n    >\n      <div className='music-cover animated fadeInDown'>\n        <h2>{speaker.name[0].text}</h2>\n      </div>\n      <div className='titles animated fadeIn'>\n        <div>\n          <b>Lecture Title</b>\n        </div>\n        <div>\n          <b>Speaker</b>\n        </div>\n      </div>\n      {speaker.videos.map((video, index) => {\n        const { title } = video;\n        return !title[0] ? null : (\n          <div\n            key={`${id}-${index}`}\n            className='song animated fadeIn'\n            style={{\n              animationDelay: `${index * 50}ms`,\n            }}\n            onClick={() => {\n              setLecture(video);\n              setSpeaker(id);\n              setIsMobilePlayerOpen(true);\n            }}\n          >\n            <div>{title[0].text}</div>\n            <div>{speaker.name[0].text}</div>\n          </div>\n        );\n      })}\n    </div>\n  );\n};\n\nexport default Songs;\n","import React, { useState, useEffect } from 'react';\nimport { useAllPrismicDocumentsByType } from '@prismicio/react';\nimport './App.scss';\nimport sortSpeakers from './utils/sortSpeakers';\nimport sortFeatured from './utils/sortFeatured';\nimport AppContext from './context/AppContext';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\nimport Sidebar from './components/Sidebar';\nimport MobileMenu from './components/MobileMenu';\nimport Browse from './components/Browse';\nimport Player from './components/Player';\nimport Songs from './components/Songs';\n\nconst App = () => {\n  let [speakers] = useAllPrismicDocumentsByType('speaker');\n  let [featured] = useAllPrismicDocumentsByType('featured');\n  speakers = sortSpeakers(speakers);\n  featured = sortFeatured(featured);\n  const [speaker, setSpeaker] = useState('YcQIHxAAACAAVZeR');\n  const [lecture, setLecture] = useState(undefined);\n  const [isMobilePlayerOpen, setIsMobilePlayerOpen] = useState(false);\n\n  const context = {\n    speakers,\n    speaker,\n    setSpeaker,\n    lecture,\n    setLecture,\n    featured,\n    isMobilePlayerOpen,\n    setIsMobilePlayerOpen,\n  };\n\n  useEffect(\n    () => {\n      if (speakers && !lecture) {\n        setLecture(speakers[speaker].videos[0]);\n      }\n    },\n    [speakers]\n  );\n\n  return speakers && lecture && featured ? (\n    <AppContext.Provider value={context}>\n      <div className='App'>\n        <BrowserRouter>\n          <MobileMenu />\n          <Sidebar />\n          <Routes>\n            <Route path='/' element={<Browse />} />\n            <Route path='/speaker/:id' element={<Songs />} />\n          </Routes>\n          <Player />\n        </BrowserRouter>\n      </div>\n    </AppContext.Provider>\n  ) : null;\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import * as prismic from '@prismicio/client';\n\nconst endpoint = prismic.getEndpoint('yogifm');\n\nexport const client = prismic.createClient(endpoint);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { PrismicProvider } from '@prismicio/react';\nimport { client } from './prismic';\n\nReactDOM.render(\n  <React.StrictMode>\n    <PrismicProvider client={client}>\n      <App />\n    </PrismicProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}